/**
 * generator-cg-gas - Yeoman Generator for Enterprise Angular projects, with Gulp Angular Sass
 * @version v3.3.3
 * @link https://github.com/Lunatic83/generator-cg-gas
 * @license 
 */
angular.module("larionovTest",["ui.bootstrap","ui.bootstrap.modal","ui.utils","ui.router","ngAnimate","angularCharts","ngMockE2E","ngResource","templates"]),angular.module("larionovTest").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(){}]),angular.module("larionovTest").run(["$rootScope","$state","$stateParams","$httpBackend","$resource",function($rootScope,$state,$stateParams,$httpBackend){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.safeApply=function(fn){var phase=$rootScope.$$phase;"$apply"===phase||"$digest"===phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)},$httpBackend.whenGET(/^\/modules\//).passThrough(),$httpBackend.whenGET(/^modules\//).passThrough(),$httpBackend.whenGET(/^assets\//).passThrough(),$httpBackend.whenGET(/^listTasks\//).passThrough()}]),angular.module("larionovTest").filter("capitalize",function(){return function(input){return input?input.replace(/([^\W_]+[^\s-]*) */g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}}),angular.module("larionovTest").factory("builderData",["$httpBackend","$resource",function($httpBackend,$resource){var data=$resource("assets/data.json").query();return $httpBackend.whenGET("/tasks/list").respond(function(){return[200,data]}),$httpBackend.whenPOST("/tasks/list").respond(function(method,url,d){return data=angular.fromJson(d),[200,data]}),data.$promise}]),angular.module("larionovTest").controller("ModalInstanceCtrl",["$scope","$modalInstance",function(scope,$modalInstance){scope.ok=function(){$modalInstance.close()},scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("larionovTest").directive("builderView",["builderData","$modal","$http",function(builderData,$modal,$http){return{restrict:"E",replace:!0,scope:{},templateUrl:"modules/directive/builder-view/builder-view.html",link:function(scope,element){element.addClass("builder-view"),scope.showEditor=!1,scope.templateData={},scope.status={openedId:null},scope.open=function(itemId){scope.status.openedId=scope.status.openedId===itemId?null:itemId},scope.openModal=function(title){scope.templateData.modalTitle=title;$modal.open({templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:"lg",scope:scope})},builderData.then(function(){scope.onDataUpdated=function(){$http.get("/tasks/list").success(function(data){scope.data=data,scope.dataEditor=angular.toJson(scope.data,!0)})},scope.updateData=function(){$http.post("/tasks/list",angular.fromJson(scope.dataEditor)),scope.onDataUpdated()},scope.onDataUpdated()}),scope.chartConfig={colors:["#ed7d31","#538135"],title:"",tooltips:!1,labels:!0,isAnimate:!0,waitForHeightAndWidth:!0,legend:{display:!1,position:"left"},innerRadius:0,lineLegend:"lineEnd"}}}}]),angular.module("larionovTest").directive("tableRow",["$modal","$resource",function(){return{restrict:"C",scope:!0,link:function(scope){scope.$watch("item",function(item){scope.itemStatus=item.state,"firewall"===item.type&&("accepted"===item.state&&(scope.itemStatus="success"),"rejected"===item.state&&(scope.itemStatus="failure")),"build"===item.type&&("complete"===item.state&&(scope.itemStatus="success"),"failed"===item.state&&(scope.itemStatus="failure")),item.unittest&&(scope.chartUnitPercent=parseInt(100*item.unittest.fail/(item.unittest.pass+item.unittest.fail)),scope.chartUnitData={series:["Tests"],data:[{x:"Passed",y:[item.unittest.pass]},{x:"Failed",y:[item.unittest.fail]}]}),item.functest&&(scope.chartFuncPercent=parseInt(100*item.functest.fail/(item.functest.pass+item.functest.fail)),scope.chartFuncData={series:["Tests"],data:[{x:"Passed",y:[item.functest.pass]},{x:"Failed",y:[item.functest.fail]}]})})}}}]),angular.module("larionovTest").constant("progressConfig",{animate:!0,max:100}).controller("ProgressController",["$scope","$attrs","progressConfig","$transition",function($scope,$attrs,progressConfig,$transition){var self=this,bars=[],max=angular.isDefined($attrs.max)?$scope.$parent.$eval($attrs.max):progressConfig.max,animate=angular.isDefined($attrs.animate)?$scope.$parent.$eval($attrs.animate):progressConfig.animate;this.addBar=function(bar,element){var oldValue=0,index=bar.$parent.$index;angular.isDefined(index)&&bars[index]&&(oldValue=bars[index].value),bars.push(bar),this.update(element,bar.value,oldValue),bar.$watch("value",function(value,oldValue){value!==oldValue&&self.update(element,value,oldValue)}),bar.$on("$destroy",function(){self.removeBar(bar)})},this.update=function(element,newValue,oldValue){var percent=this.getPercentage(newValue);animate?(element.css("width",this.getPercentage(oldValue)+"%"),$transition(element,{width:percent+"%"})):element.css({transition:"none",width:percent+"%"})},this.removeBar=function(bar){bars.splice(bars.indexOf(bar),1)},this.getPercentage=function(value){return Math.round(100*value/max)}}]).directive("buildProgressbar",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",scope:{value:"=",type:"@"},templateUrl:"modules/directive/build-progress/build-progress.html",link:function(scope,element,attrs,progressCtrl){progressCtrl.addBar(scope,angular.element(element.children()[0]))}}}),angular.module("larionovTest").directive("buildArrow",function(){return{restrict:"E",scope:{value:"="},link:function(scope,element,attrs){element.addClass("arrow"),scope.$watch("value",function(){var value=scope.value;element.html(""),element.removeClass("up down left right green red yellow"),value&&(element.addClass("vert"===attrs.arrowType?value.inc?"up green":"down red":value.inc?"right yellow":"left yellow"),element.append(element.hasClass("up")||element.hasClass("left")?'<div class="tri"></div><div class="bar"></div>':'<div class="bar"></div><div class="tri"></div>'),element.append('<div class="text"><span>'+value.value+"</span></div>"))})}}});